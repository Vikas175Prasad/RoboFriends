{"version":3,"sources":["Card.js","CardList.js","Searchbox.js","Scroll.js","ErrorBoundry.js","App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","src","alt","CardList","robots","map","user","i","Searchbox","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","React","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","ErrorBoundry","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAiBeA,EAhBF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MACjB,OACI,sBAAKF,GAAIA,EAAIG,UAAU,mDAAvB,UACI,qBAAKC,IAAG,+BAA0BH,EAA1B,YAA0CI,IAAI,gBACtD,sBAAKF,UAAU,KAAf,UACI,6BACKF,IAEL,4BACKC,WCaVI,EApBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAMhB,OACI,8BAEQA,EAAOC,KAAI,SAACC,EAAMC,GACd,OACI,cAAC,EAAD,CAAcV,GAAIO,EAAOG,GAAGV,GAAIC,KAAMM,EAAOG,GAAGT,KAAMC,MAAOK,EAAOG,GAAGR,OAA5DQ,SCHpBC,EATG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACjB,OACI,qBAAKT,UAAU,MAAf,SACA,uBAAOA,UAAU,oCAChBU,KAAK,SAASC,YAAY,gBAAgBC,SAAUH,OCI9CI,EATA,SAACC,GAEZ,OACI,qBAAKC,MAAO,CAACC,SAAS,SAAUC,OAAO,kBAAmBC,OAAO,SAAjE,SACKJ,EAAMK,YCeJC,E,kDAlBX,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHC,E,qDAMnB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG9B,WACI,OAAIG,KAAKJ,MAAMC,SACJ,yCAEJG,KAAKX,MAAMK,a,GAfEQ,IAAMC,WC0DnBC,G,wDAlDX,aAAe,IAAD,8BACV,gBAeJC,eAAiB,SAACC,GACd,EAAKL,SAAS,CAAEM,YAAaD,EAAME,OAAOC,SAf1C,EAAKb,MAAQ,CACTjB,OAAQ,GACR4B,YAAa,IAJP,E,qDAQd,WAAqB,IAAD,OAChBG,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OACVA,EAASC,UACZF,MAAK,SAAAG,GAAW,EAAKb,SAAS,CAAEtB,OAAQmC,S,oBAQjD,WAAU,IAAD,OACCC,EAAiBf,KAAKJ,MAAMjB,OAAOqC,QAAO,SAAAC,GAC5C,OAAOA,EAAM5C,KAAK6C,cAAcC,SAAS,EAAKvB,MAAMW,YAAYW,kBAGpE,OAAQlB,KAAKJ,MAAMjB,OAAOyC,OAQlB,sBAAK7C,UAAU,KAAf,UACI,6CACA,cAAC,EAAD,CAAWS,aAAcgB,KAAKK,iBAC9B,cAAC,EAAD,UACI,cAACgB,EAAD,UACI,cAAC,EAAD,CAAU1C,OAAQoC,WAX9B,qBAAKxC,UAAU,KAAf,SACI,kD,GA9BF2B,IAAMC,YCKTmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAGDC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.feb7f0b1.chunk.js","sourcesContent":["import React from 'react';\r\nconst Card = ({id, name, email}) => {\r\n        return (\r\n            <div id={id} className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n                <img src={`https://robohash.org/${name}?100x100`} alt=\"Profile Pic\" />\r\n                <div className='tc'>\r\n                    <h2>\r\n                        {name}\r\n                    </h2>\r\n                    <p>\r\n                        {email}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n    // const cardArray = robots.map((user, i) => {\r\n    //     return (\r\n    //         <Card key={i} id={robots[i].id} name={robots[i].name} email={robots[i].email} />\r\n    //     )\r\n    // }) // Or use directly in return()\r\n    return (\r\n        <div>\r\n            {\r\n                robots.map((user, i) => {\r\n                    return (\r\n                        <Card key={i} id={robots[i].id} name={robots[i].name} email={robots[i].email} />\r\n                    );\r\n                })\r\n            }\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst Searchbox = ({ searchChange} ) => {\r\n    return (\r\n        <div className=\"pa2\">\r\n        <input className='pa3 ba b--greeen bg-lightest-blue'\r\n         type=\"serach\" placeholder=\"Search Robots\" onChange={searchChange} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Searchbox;","import React from 'react';\r\nconst Scroll = (props) => {\r\n\r\n    return(\r\n        <div style={{overflow:'scroll', border:'5px solid black', height:'800px'}}>\r\n            {props.children}\r\n        </div>\r\n    ) \r\n};\r\n\r\nexport default Scroll;","import React from 'react';\r\nclass ErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n    componentDidCatch(error, info) {\r\n        this.setState({ hasError: true })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h1>Oops...</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import React from 'react';\r\nimport CardList from './CardList';\r\nimport Searchbox from './Searchbox';\r\nimport Scroll from './Scroll';\r\nimport ErrorBoundry from './ErrorBoundry';\r\nimport './App.css'\r\n\r\nclass App extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response =>\r\n                response.json())\r\n            .then(users => { this.setState({ robots: users }) }\r\n            );\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value })\r\n    }\r\n\r\n    render() {\r\n        const filteredRobots = this.state.robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n        })\r\n\r\n        return !this.state.robots.length ?\r\n            (\r\n                <div className=\"tc\">\r\n                    <h1>Loading...</h1>\r\n                </div>\r\n            )\r\n            :\r\n            (\r\n                <div className='tc'>\r\n                    <h1>RoboFriends</h1>\r\n                    <Searchbox searchChange={this.onSearchChange} />\r\n                    <Scroll>\r\n                        <ErrorBoundry>\r\n                            <CardList robots={filteredRobots} />\r\n                        </ErrorBoundry>\r\n                    </Scroll>\r\n\r\n                </div>\r\n\r\n            );\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'tachyons';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n   <App />\r\n\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}